import { connectToDatabase } from '../lib/db-utils';
import MedicalCamp from '../models/MedicalCamp';
import { logger } from '../utils/logger';

export interface MedicalInfoResponse {
  success: boolean;
  response: string;
  camps?: any[];
  error?: string;
}

/**
 * Generates professional medical camp information responses
 */
export async function generateMedicalInfoResponse(
  userMessage: string,
  userId: string
): Promise<MedicalInfoResponse> {
  try {
    await connectToDatabase();
    
    // Extract keywords from user message
    const keywords = extractKeywords(userMessage.toLowerCase());
    
    // Get all active medical camps
    const camps = await MedicalCamp.find({ isActive: true }).sort({ createdAt: -1 });
    
    if (camps.length === 0) {
      return {
        success: true,
        response: "‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö ‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡∏¢‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏®‡∏¥‡∏£‡∏¥‡∏£‡∏≤‡∏ä 2025 ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á‡∏ó‡∏µ‡πà‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡∏®‡∏¥‡∏£‡∏¥‡∏£‡∏≤‡∏ä ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏≤‡∏£‡∏ú‡πà‡∏≤‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏Ç‡∏≠‡∏á‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡∏Ñ‡∏£‡∏±‡∏ö"
      };
    }

    // Determine response based on keywords and message content
    let response = "";
    let relevantCamps = camps;

    if (keywords.includes('cardiology') || keywords.includes('heart') || keywords.includes('‡∏´‡∏±‡∏ß‡πÉ‡∏à')) {
      relevantCamps = camps.filter(camp => camp.category === 'specialized');
      response = generateCardiologyResponse(relevantCamps);
    } else if (keywords.includes('diabetes') || keywords.includes('‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô')) {
      relevantCamps = camps.filter(camp => camp.category === 'workshop');
      response = generateDiabetesResponse(relevantCamps);
    } else if (keywords.includes('general') || keywords.includes('‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ') || keywords.includes('‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û')) {
      relevantCamps = camps.filter(camp => camp.category === 'general');
      response = generateGeneralHealthResponse(relevantCamps);
    } else if (keywords.includes('register') || keywords.includes('‡∏™‡∏°‡∏±‡∏Ñ‡∏£') || keywords.includes('‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô')) {
      response = generateRegistrationResponse(camps);
    } else if (keywords.includes('contact') || keywords.includes('‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠') || keywords.includes('‡πÇ‡∏ó‡∏£')) {
      response = generateContactResponse(camps);
    } else if (keywords.includes('location') || keywords.includes('‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà') || keywords.includes('‡∏ó‡∏µ‡πà‡πÑ‡∏´‡∏ô')) {
      response = generateLocationResponse(camps);
    } else if (keywords.includes('date') || keywords.includes('‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà') || keywords.includes('‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏´‡∏£‡πà')) {
      response = generateDateResponse(camps);
    } else {
      // General overview
      response = generateGeneralOverviewResponse(camps);
    }

    return {
      success: true,
      response,
      camps: relevantCamps
    };

  } catch (error) {
    logger.error('Error generating medical info response', { error, userId });
    return {
      success: false,
      response: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡∏£‡∏±‡∏ö',
      error: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡∏£‡∏±‡∏ö'
    };
  }
}

function extractKeywords(message: string): string[] {
  const keywords = [];
  
  // Medical terms
  if (message.includes('cardiology') || message.includes('heart') || message.includes('‡∏´‡∏±‡∏ß‡πÉ‡∏à')) {
    keywords.push('cardiology', 'heart', '‡∏´‡∏±‡∏ß‡πÉ‡∏à');
  }
  if (message.includes('diabetes') || message.includes('‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô')) {
    keywords.push('diabetes', '‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô');
  }
  if (message.includes('general') || message.includes('‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û') || message.includes('‡∏ï‡∏£‡∏ß‡∏à')) {
    keywords.push('general', '‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û', '‡∏ï‡∏£‡∏ß‡∏à');
  }
  
  // Action terms
  if (message.includes('register') || message.includes('‡∏™‡∏°‡∏±‡∏Ñ‡∏£') || message.includes('‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô')) {
    keywords.push('register', '‡∏™‡∏°‡∏±‡∏Ñ‡∏£', '‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô');
  }
  if (message.includes('contact') || message.includes('‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠') || message.includes('‡πÇ‡∏ó‡∏£')) {
    keywords.push('contact', '‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠', '‡πÇ‡∏ó‡∏£');
  }
  if (message.includes('location') || message.includes('‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà') || message.includes('‡∏ó‡∏µ‡πà‡πÑ‡∏´‡∏ô')) {
    keywords.push('location', '‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà', '‡∏ó‡∏µ‡πà‡πÑ‡∏´‡∏ô');
  }
  if (message.includes('date') || message.includes('‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà') || message.includes('‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏´‡∏£‡πà')) {
    keywords.push('date', '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà', '‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏´‡∏£‡πà');
  }
  
  return keywords;
}

function generateGeneralOverviewResponse(camps: any[]): string {
  const generalCamp = camps.find(camp => camp.category === 'general');
  const specializedCamp = camps.find(camp => camp.category === 'specialized');
  const workshopCamp = camps.find(camp => camp.category === 'workshop');

  let response = "üè• **‡∏Ñ‡πà‡∏≤‡∏¢‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏®‡∏¥‡∏£‡∏¥‡∏£‡∏≤‡∏ä 2025**\n\n";
  response += "‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡∏®‡∏¥‡∏£‡∏¥‡∏£‡∏≤‡∏ä‡∏Ç‡∏≠‡πÄ‡∏ä‡∏¥‡∏ç‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Ñ‡πà‡∏≤‡∏¢‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏õ‡∏µ 2025 ‡∏ã‡∏∂‡πà‡∏á‡∏°‡∏µ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó:\n\n";

  if (generalCamp) {
    response += `üìã **‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ**\n`;
    response += `üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${generalCamp.date}\n`;
    response += `üìç ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà: ${generalCamp.location}\n`;
    response += `‚úÖ ‡∏ü‡∏£‡∏µ ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢\n\n`;
  }

  if (specializedCamp) {
    response += `‚ù§Ô∏è **‡∏ï‡∏£‡∏ß‡∏à‡πÇ‡∏£‡∏Ñ‡∏´‡∏±‡∏ß‡πÉ‡∏à**\n`;
    response += `üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${specializedCamp.date}\n`;
    response += `üìç ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà: ${specializedCamp.location}\n`;
    response += `‚ö†Ô∏è ‡∏ï‡πâ‡∏≠‡∏á‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤\n\n`;
  }

  if (workshopCamp) {
    response += `üìö **‡πÄ‡∏ß‡∏¥‡∏£‡πå‡∏Ñ‡∏ä‡πá‡∏≠‡∏õ‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô**\n`;
    response += `üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${workshopCamp.date}\n`;
    response += `üìç ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà: ${workshopCamp.location}\n`;
    response += `üí∞ ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢: ${workshopCamp.registrationInfo.includes('500 THB') ? '500 ‡∏ö‡∏≤‡∏ó' : '‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢'}\n\n`;
  }

  response += "‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠:\n";
  response += "üìû ‡πÇ‡∏ó‡∏£: 02-419-7000\n";
  response += "üåê ‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå: www.siriraj.hospital/medicalcamp2025";

  return response;
}

function generateCardiologyResponse(camps: any[]): string {
  const cardiologyCamp = camps.find(camp => camp.category === 'specialized');
  
  if (!cardiologyCamp) {
    return "‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö ‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏¢‡∏ï‡∏£‡∏ß‡∏à‡πÇ‡∏£‡∏Ñ‡∏´‡∏±‡∏ß‡πÉ‡∏à‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏ú‡∏ô‡∏Å‡πÇ‡∏£‡∏Ñ‡∏´‡∏±‡∏ß‡πÉ‡∏à ‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡∏®‡∏¥‡∏£‡∏¥‡∏£‡∏≤‡∏ä ‡πÇ‡∏ó‡∏£ 02-419-7500";
  }

  let response = "‚ù§Ô∏è **‡∏Ñ‡πà‡∏≤‡∏¢‡∏ï‡∏£‡∏ß‡∏à‡πÇ‡∏£‡∏Ñ‡∏´‡∏±‡∏ß‡πÉ‡∏à ‡∏®‡∏¥‡∏£‡∏¥‡∏£‡∏≤‡∏ä 2025**\n\n";
  response += `${cardiologyCamp.description}\n\n`;
  response += `üìÖ **‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà**: ${cardiologyCamp.date}\n`;
  response += `üìç **‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà**: ${cardiologyCamp.location}\n`;
  response += `üè• **‡∏à‡∏±‡∏î‡πÇ‡∏î‡∏¢**: ${cardiologyCamp.organizer}\n\n`;
  
  response += "üîç **‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö**:\n";
  cardiologyCamp.activities.forEach((activity: string, index: number) => {
    response += `${index + 1}. ${activity}\n`;
  });
  
  response += "\nüìã **‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°**:\n";
  cardiologyCamp.requirements.forEach((req: string, index: number) => {
    response += `${index + 1}. ${req}\n`;
  });
  
  response += `\nüìù **‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô**: ${cardiologyCamp.registrationInfo}\n\n`;
  response += "üìû **‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°**:\n";
  response += `‡πÇ‡∏ó‡∏£: ${cardiologyCamp.contactInfo.phone}\n`;
  response += `‡∏≠‡∏µ‡πÄ‡∏°‡∏•: ${cardiologyCamp.contactInfo.email}`;

  return response;
}

function generateDiabetesResponse(camps: any[]): string {
  const diabetesCamp = camps.find(camp => camp.category === 'workshop');
  
  if (!diabetesCamp) {
    return "‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö ‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏ß‡∏¥‡∏£‡πå‡∏Ñ‡∏ä‡πá‡∏≠‡∏õ‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏ú‡∏ô‡∏Å‡∏ï‡πà‡∏≠‡∏°‡πÑ‡∏£‡πâ‡∏ó‡πà‡∏≠ ‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡∏®‡∏¥‡∏£‡∏¥‡∏£‡∏≤‡∏ä ‡πÇ‡∏ó‡∏£ 02-419-7800";
  }

  let response = "üìö **‡πÄ‡∏ß‡∏¥‡∏£‡πå‡∏Ñ‡∏ä‡πá‡∏≠‡∏õ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô ‡∏®‡∏¥‡∏£‡∏¥‡∏£‡∏≤‡∏ä 2025**\n\n";
  response += `${diabetesCamp.description}\n\n`;
  response += `üìÖ **‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà**: ${diabetesCamp.date}\n`;
  response += `üìç **‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà**: ${diabetesCamp.location}\n`;
  response += `üè• **‡∏à‡∏±‡∏î‡πÇ‡∏î‡∏¢**: ${diabetesCamp.organizer}\n\n`;
  
  response += "üìñ **‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡∏≠‡∏ö‡∏£‡∏°**:\n";
  diabetesCamp.activities.forEach((activity: string, index: number) => {
    response += `${index + 1}. ${activity}\n`;
  });
  
  response += "\nüìã **‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°**:\n";
  diabetesCamp.requirements.forEach((req: string, index: number) => {
    response += `${index + 1}. ${req}\n`;
  });
  
  response += `\nüí∞ **‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢**: ${diabetesCamp.registrationInfo}\n\n`;
  response += "üìû **‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°**:\n";
  response += `‡πÇ‡∏ó‡∏£: ${diabetesCamp.contactInfo.phone}\n`;
  response += `‡∏≠‡∏µ‡πÄ‡∏°‡∏•: ${diabetesCamp.contactInfo.email}`;

  return response;
}

function generateGeneralHealthResponse(camps: any[]): string {
  const generalCamp = camps.find(camp => camp.category === 'general');
  
  if (!generalCamp) {
    return "‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö ‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏¢‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á‡∏ó‡∏µ‡πà‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡∏®‡∏¥‡∏£‡∏¥‡∏£‡∏≤‡∏ä ‡πÇ‡∏ó‡∏£ 02-419-7000";
  }

  let response = "üìã **‡∏Ñ‡πà‡∏≤‡∏¢‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ ‡∏®‡∏¥‡∏£‡∏¥‡∏£‡∏≤‡∏ä 2025**\n\n";
  response += `${generalCamp.description}\n\n`;
  response += `üìÖ **‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà**: ${generalCamp.date}\n`;
  response += `üìç **‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà**: ${generalCamp.location}\n`;
  response += `üè• **‡∏à‡∏±‡∏î‡πÇ‡∏î‡∏¢**: ${generalCamp.organizer}\n\n`;
  
  response += "üîç **‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö**:\n";
  generalCamp.activities.forEach((activity: string, index: number) => {
    response += `${index + 1}. ${activity}\n`;
  });
  
  response += "\nüìã **‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°**:\n";
  generalCamp.requirements.forEach((req: string, index: number) => {
    response += `${index + 1}. ${req}\n`;
  });
  
  response += `\nüìù **‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô**: ${generalCamp.registrationInfo}\n\n`;
  response += "‚úÖ **‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö**:\n";
  generalCamp.benefits.forEach((benefit: string, index: number) => {
    response += `${index + 1}. ${benefit}\n`;
  });

  return response;
}

function generateRegistrationResponse(camps: any[]): string {
  let response = "üìù **‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Ñ‡πà‡∏≤‡∏¢‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏®‡∏¥‡∏£‡∏¥‡∏£‡∏≤‡∏ä 2025**\n\n";
  
  camps.forEach((camp, index) => {
    response += `${index + 1}. **${camp.title}**\n`;
    response += `   üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${camp.date}\n`;
    response += `   üìù ${camp.registrationInfo}\n`;
    response += `   üìû ‡πÇ‡∏ó‡∏£: ${camp.contactInfo.phone}\n\n`;
  });
  
  response += "üåê **‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå**: www.siriraj.hospital/medicalcamp2025\n";
  response += "üìß **‡∏≠‡∏µ‡πÄ‡∏°‡∏•**: medicalcamp@siriraj.hospital";

  return response;
}

function generateContactResponse(camps: any[]): string {
  let response = "üìû **‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Ñ‡πà‡∏≤‡∏¢‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏®‡∏¥‡∏£‡∏¥‡∏£‡∏≤‡∏ä 2025**\n\n";
  
  camps.forEach((camp, index) => {
    response += `${index + 1}. **${camp.title}**\n`;
    response += `   üìû ‡πÇ‡∏ó‡∏£: ${camp.contactInfo.phone}\n`;
    response += `   üìß ‡∏≠‡∏µ‡πÄ‡∏°‡∏•: ${camp.contactInfo.email}\n`;
    if (camp.contactInfo.website) {
      response += `   üåê ‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå: ${camp.contactInfo.website}\n`;
    }
    response += "\n";
  });
  
  response += "üè• **‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ**:\n";
  response += "üìû ‡πÇ‡∏ó‡∏£: 02-419-7000\n";
  response += "üåê ‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå: www.siriraj.hospital";

  return response;
}

function generateLocationResponse(camps: any[]): string {
  let response = "üìç **‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡∏Ñ‡πà‡∏≤‡∏¢‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏®‡∏¥‡∏£‡∏¥‡∏£‡∏≤‡∏ä 2025**\n\n";
  
  camps.forEach((camp, index) => {
    response += `${index + 1}. **${camp.title}**\n`;
    response += `   üìç ${camp.location}\n`;
    response += `   üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${camp.date}\n\n`;
  });
  
  response += "üó∫Ô∏è **‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà**:\n";
  response += "‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡∏®‡∏¥‡∏£‡∏¥‡∏£‡∏≤‡∏ä ‡∏ï‡∏±‡πâ‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà ‡∏ñ‡∏ô‡∏ô‡∏ß‡∏±‡∏á‡∏´‡∏•‡∏±‡∏á ‡πÅ‡∏Ç‡∏ß‡∏á‡∏®‡∏¥‡∏£‡∏¥‡∏£‡∏≤‡∏ä ‡πÄ‡∏Ç‡∏ï‡∏ö‡∏≤‡∏á‡∏Å‡∏≠‡∏Å‡∏ô‡πâ‡∏≠‡∏¢ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø\n";
  response += "üöá ‡∏£‡∏ñ‡πÑ‡∏ü‡∏ü‡πâ‡∏≤: ‡∏™‡∏ñ‡∏≤‡∏ô‡∏µ‡∏™‡∏ô‡∏≤‡∏°‡πÑ‡∏ä‡∏¢ (MRT)\n";
  response += "üöå ‡∏£‡∏ñ‡πÄ‡∏°‡∏•‡πå: ‡∏™‡∏≤‡∏¢ 3, 6, 9, 32, 33, 43, 47, 53, 82";

  return response;
}

function generateDateResponse(camps: any[]): string {
  let response = "üìÖ **‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏Ñ‡πà‡∏≤‡∏¢‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏®‡∏¥‡∏£‡∏¥‡∏£‡∏≤‡∏ä 2025**\n\n";
  
  camps.forEach((camp, index) => {
    response += `${index + 1}. **${camp.title}**\n`;
    response += `   üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${camp.date}\n`;
    response += `   üìç ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà: ${camp.location}\n\n`;
  });
  
  response += "üìù **‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏**:\n";
  response += "‚Ä¢ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏°‡∏≤‡∏ñ‡∏∂‡∏á‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô 30 ‡∏ô‡∏≤‡∏ó‡∏µ\n";
  response += "‚Ä¢ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏Å‡πà‡∏≠‡∏ô‡∏ß‡∏±‡∏ô‡∏á‡∏≤‡∏ô\n";
  response += "‚Ä¢ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏≤‡∏£‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î";

  return response;
}
